package com.mobisystems.mobiscanner.model;

import com.mobisystems.mobiscanner.common.CommonPreferences.OCRLanguage;
import com.mobisystems.mobiscanner.common.c;
import com.mobisystems.mobiscanner.image.ImageOrientation;

public class a
{
  public static final String[] aIC;
  public static final String[] aID;
  public static final String[][] aIE;
  private static final c apd = new c();
  
  static
  {
    aIC = new String[] { "PRAGMA foreign_keys = ON;", "PRAGMA auto_vacuum = FULL;" };
    aID = new String[] { "CREATE TABLE documents ( id INTEGER PRIMARY KEY ASC AUTOINCREMENT, name TEXT NOT NULL CHECK(name IS NOT ''), creation_time INTEGER DEFAULT (strftime('%s', 'now')), last_modification_time INTEGER DEFAULT (strftime('%s', 'now')), page_size INTEGER, page_width REAL, page_height REAL, page_orientation INTEGER, page_left_margin REAL, page_right_margin REAL, page_top_margin REAL, page_bottom_margin REAL, image_quality INTEGER, image_density INTEGER,last_access_time INTEGER DEFAULT (strftime('%s', 'now')), favorite_rank INTEGER,title_page_id INTEGER,accessed_flag INTEGER DEFAULT (0), recognized_content_lang INTEGER, recognized_content_second_lang INTEGER );", "CREATE INDEX doc_name ON documents(name);", "CREATE INDEX doc_last_modification_time ON documents(last_modification_time);", "CREATE INDEX doc_last_access_time ON documents(last_access_time);", "CREATE INDEX doc_favorite_rank ON documents(favorite_rank);", "CREATE TABLE pages ( id INTEGER PRIMARY KEY ASC AUTOINCREMENT, doc_id INTEGER REFERENCES documents(id), raw_image_id INTEGER, idx_within_doc INTEGER, creation_time INTEGER DEFAULT (strftime('%s', 'now')), last_modification_time INTEGER DEFAULT (strftime('%s', 'now')), size INTEGER, width REAL, height REAL, orientation INTEGER, left_margin REAL, right_margin REAL, top_margin REAL, bottom_margin REAL, image_quality INTEGER, image_density INTEGER, proc_image_orientation INTEGER, proc_image_id INTEGER DEFAULT (-1), image_version INTEGER DEFAULT (0), crop_matrix TEXT DEFAULT (''),has_orientation_data BOOLEAN DEFAULT (0), orientation_data_x REAL DEFAULT (0), orientation_data_y REAL DEFAULT (0), orientation_data_z REAL DEFAULT (0), has_location_data INTEGER DEFAULT (0), location_data_long REAL DEFAULT (0), location_data_lat REAL DEFAULT (0), location_data_alt REAL DEFAULT (0), location_data_accuracy REAL DEFAULT (0), original_image_name TEXT DEFAULT (''), location_data_address TEXT DEFAULT (''), recognized_content TEXT DEFAULT (''), recognized_content_lang INTEGER, recognized_content_second TEXT DEFAULT (''), recognized_content_second_lang INTEGER, has_recognized_content INTEGER DEFAULT(-1), cropped_image_id INTEGER DEFAULT (-1), has_crop_data INTEGER DEFAULT (0), crop_data_edges TEXT DEFAULT (''), crop_data_points TEXT DEFAULT (''),crop_data_ratio REAL DEFAULT (0) );", "CREATE INDEX page_doc_id ON pages(doc_id);", "CREATE INDEX page_doc_idx_within_doc ON pages(doc_id, idx_within_doc);", "CREATE INDEX page_raw_image_id ON pages(raw_image_id);", "CREATE TABLE config ( id INTEGER PRIMARY KEY ASC AUTOINCREMENT, camera_roll_doc_id INTEGER, proc_image_id_seq INTEGER);", "INSERT INTO config (camera_roll_doc_id, proc_image_id_seq) VALUES (-1, 0);", "CREATE TABLE savedcoords ( creation_time INTEGER DEFAULT (strftime('%s', 'now')), longitude REAL, latitude REAL, altitude REAL, accuracy REAL );" };
    String[] arrayOfString1 = { "" };
    String[] arrayOfString2 = { "" };
    String[] arrayOfString3 = { "ALTER TABLE pages ADD COLUMN raw_image_id INTEGER;", "CREATE INDEX page_raw_image_id ON pages(raw_image_id);", "UPDATE pages SET raw_image_id=id;" };
    String[] arrayOfString4 = { "ALTER TABLE pages ADD COLUMN proc_image_orientation INTEGER;", "UPDATE pages SET proc_image_orientation=" + String.valueOf(ImageOrientation.aHV.Dp()) + ";" };
    String[] arrayOfString5 = { "" };
    String[] arrayOfString6 = { "DROP TABLE IF EXISTS documents_new;", "CREATE TABLE documents_new ( id INTEGER PRIMARY KEY ASC AUTOINCREMENT, name TEXT NOT NULL CHECK(name IS NOT ''), creation_time INTEGER DEFAULT (strftime('%s', 'now')), last_modification_time INTEGER DEFAULT (strftime('%s', 'now')), page_size INTEGER, page_width REAL, page_height REAL, page_orientation INTEGER, page_left_margin REAL, page_right_margin REAL, page_top_margin REAL, page_bottom_margin REAL, image_quality INTEGER, image_density INTEGER,last_access_time INTEGER DEFAULT (strftime('%s', 'now')), favorite_rank INTEGER,title_page_id INTEGER);", "CREATE TABLE pages_new ( id INTEGER PRIMARY KEY ASC AUTOINCREMENT, doc_id INTEGER REFERENCES documents_new(id), raw_image_id INTEGER, idx_within_doc INTEGER, creation_time INTEGER DEFAULT (strftime('%s', 'now')), last_modification_time INTEGER DEFAULT (strftime('%s', 'now')), size INTEGER, width REAL, height REAL, orientation INTEGER, left_margin REAL, right_margin REAL, top_margin REAL, bottom_margin REAL, image_quality INTEGER, image_density INTEGER, proc_image_orientation INTEGER);", "INSERT INTO documents_new SELECT *, last_modification_time, 0, -1 FROM documents;", "INSERT INTO pages_new SELECT * FROM pages;", "DROP TABLE pages;", "DROP TABLE documents;", "ALTER TABLE documents_new RENAME TO documents;", "ALTER TABLE pages_new RENAME TO pages;", "CREATE INDEX doc_name ON documents(name);", "CREATE INDEX doc_last_modification_time ON documents(last_modification_time);", "CREATE INDEX doc_last_access_time ON documents(last_access_time);", "CREATE INDEX doc_favorite_rank ON documents(favorite_rank);", "CREATE INDEX page_doc_id ON pages(doc_id);", "CREATE INDEX page_doc_idx_within_doc ON pages(doc_id, idx_within_doc);", "CREATE INDEX page_raw_image_id ON pages(raw_image_id);" };
    String[] arrayOfString7 = { "CREATE TABLE config ( id INTEGER PRIMARY KEY ASC AUTOINCREMENT, camera_roll_doc_id INTEGER);", "INSERT INTO config (camera_roll_doc_id) VALUES (-1);" };
    String[] arrayOfString8 = { "ALTER TABLE documents ADD COLUMN accessed_flag INTEGER DEFAULT (0);", "UPDATE documents SET accessed_flag=1;" };
    String[] arrayOfString9 = { "ALTER TABLE pages ADD COLUMN proc_image_id INTEGER DEFAULT (-1);", "UPDATE pages SET proc_image_id=-1;" };
    String[] arrayOfString10 = { "ALTER TABLE pages ADD COLUMN image_version INTEGER DEFAULT (0);", "UPDATE pages SET image_version=0;" };
    String[] arrayOfString11 = { "ALTER TABLE pages ADD COLUMN crop_matrix TEXT DEFAULT ('');", "UPDATE pages SET crop_matrix='';" };
    String[] arrayOfString12 = { "ALTER TABLE pages ADD COLUMN has_orientation_data BOOLEAN DEFAULT (0);", "UPDATE pages SET has_orientation_data=0;", "ALTER TABLE pages ADD COLUMN orientation_data_x REAL DEFAULT (0);", "UPDATE pages SET orientation_data_x=0;", "ALTER TABLE pages ADD COLUMN orientation_data_y REAL DEFAULT (0);", "UPDATE pages SET orientation_data_y=0;", "ALTER TABLE pages ADD COLUMN orientation_data_z REAL DEFAULT (0);", "UPDATE pages SET orientation_data_z=0;", "ALTER TABLE pages ADD COLUMN has_location_data INTEGER DEFAULT (0);", "UPDATE pages SET has_location_data=0;", "ALTER TABLE pages ADD COLUMN location_data_long REAL DEFAULT (0);", "UPDATE pages SET location_data_long=0;", "ALTER TABLE pages ADD COLUMN location_data_lat REAL DEFAULT (0);", "UPDATE pages SET location_data_lat=0;", "ALTER TABLE pages ADD COLUMN location_data_alt REAL DEFAULT (0);", "UPDATE pages SET location_data_alt=0;", "ALTER TABLE pages ADD COLUMN location_data_accuracy REAL DEFAULT (0);", "UPDATE pages SET location_data_accuracy=0;", "ALTER TABLE pages ADD COLUMN original_image_name TEXT DEFAULT ('') ;", "UPDATE pages SET original_image_name='' ;", "CREATE TABLE savedcoords ( creation_time INTEGER DEFAULT (strftime('%s', 'now')), longitude REAL, latitude REAL, altitude REAL, accuracy REAL );" };
    String[] arrayOfString13 = { "ALTER TABLE pages ADD COLUMN location_data_address TEXT DEFAULT ('');", "UPDATE pages SET location_data_address='';", "ALTER TABLE pages ADD COLUMN recognized_content TEXT DEFAULT ('');", "UPDATE pages SET recognized_content='';", "ALTER TABLE pages ADD COLUMN recognized_content_second TEXT DEFAULT ('');", "UPDATE pages SET recognized_content_second='';", "ALTER TABLE pages ADD COLUMN recognized_content_lang INTEGER;", "UPDATE pages SET recognized_content_lang=" + String.valueOf(CommonPreferences.OCRLanguage.aqh.Dp()) + ";", "ALTER TABLE pages ADD COLUMN has_recognized_content INTEGER DEFAULT(-1);", "UPDATE pages SET has_recognized_content=-1;", "ALTER TABLE pages ADD COLUMN recognized_content_second_lang INTEGER;", "UPDATE pages SET recognized_content_second_lang=" + String.valueOf(CommonPreferences.OCRLanguage.aqh.Dp()) + ";", "ALTER TABLE documents ADD COLUMN recognized_content_lang INTEGER;", "UPDATE documents SET recognized_content_lang=" + String.valueOf(CommonPreferences.OCRLanguage.aqh.Dp()) + ";", "ALTER TABLE documents ADD COLUMN recognized_content_second_lang INTEGER;", "UPDATE documents SET recognized_content_second_lang=" + String.valueOf(CommonPreferences.OCRLanguage.aqh.Dp()) + ";" };
    aIE = new String[][] { arrayOfString1, arrayOfString2, arrayOfString3, arrayOfString4, arrayOfString5, arrayOfString6, { "UPDATE documents SET title_page_id=coalesce( (SELECT id FROM pages WHERE doc_id=documents.id AND idx_within_doc=1), -1 );" }, arrayOfString7, arrayOfString8, arrayOfString9, { "ALTER TABLE config ADD COLUMN proc_image_id_seq INTEGER;", "UPDATE config SET proc_image_id_seq=0;" }, arrayOfString10, arrayOfString11, arrayOfString12, arrayOfString13, { "ALTER TABLE pages ADD COLUMN cropped_image_id INTEGER DEFAULT (-1);", "UPDATE pages SET cropped_image_id=-1;", "ALTER TABLE pages ADD COLUMN has_crop_data INTEGER DEFAULT (0);", "UPDATE pages SET has_crop_data=0;", "ALTER TABLE pages ADD COLUMN crop_data_edges TEXT DEFAULT ('');", "UPDATE pages SET crop_data_edges ='';", "ALTER TABLE pages ADD COLUMN crop_data_points TEXT DEFAULT ('');", "UPDATE pages SET crop_data_points ='';", "ALTER TABLE pages ADD COLUMN crop_data_ratio REAL DEFAULT (0);", "UPDATE pages SET crop_data_ratio=0;" } };
  }
}


/* Location:              /Users/amaurremi/uw/stringoid/static-dynamic-comparison/apps/quick pdf scanner/com.mobisystems.mobiscanner-213-dex2jar.jar!/com/mobisystems/mobiscanner/model/a.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */